# steps:
#   # 깃 샤값을 기반으로 이미지의 존재 여부를 확인하고 없으면 빌드하는 스텝
#   - name: 'gcr.io/cloud-builders/gcloud'
#     id: 'check-git-sha-tag-and-build'
#     entrypoint: 'bash'
#     args:
#     - '-c'
#     - |
#       image_exists=$(gcloud container images list-tags us-west1-docker.pkg.dev/swit-ops/test-231019/test-img --filter="tags:$SHORT_SHA" --format="get(tags)" 2>&1 | awk -F';' '{print $1}')
#       echo "sha: $SHORT_SHA"
#       echo "img: $image_exists"
#       if [[ $image_exists == "$SHORT_SHA" ]]; then
#         echo "Image with git SHA tag already exists. Proceeding to tag. 태그가 이미 있따"
#       else
#         echo "No image found with git SHA tag. Proceeding with build. 태그가 업따"
#         /kaniko/executor --context=dir://. --dockerfile=Dockerfile --destination=us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$SHORT_SHA
#       fi

#   # 이미지에 시멘틱 태그 추가 스텝
#   - name: 'gcr.io/cloud-builders/gcloud'
#     id: 'add-semantic-tag'
#     args:
#     - container
#     - images
#     - add-tag
#     - us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$SHORT_SHA
#     - us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$TAG_NAME
#     - -q

# options:
#   machineType: 'N1_HIGHCPU_8'
steps:
  # 깃 샤값을 기반으로 이미지의 존재 여부를 확인하는 스텝
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'check-git-sha-tag'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      mkdir -p /workspace/status
      image_exists=$(gcloud container images list-tags us-west1-docker.pkg.dev/swit-ops/test-231019/test-img --filter="tags:$SHORT_SHA" --format="get(tags)" | awk -F';' '{print $1}')
      if [[ $image_exists == "$SHORT_SHA" ]]; then
        echo "Image with git SHA tag already exists. Proceeding to tag."
        echo "true" > /workspace/status/skip_build.txt
      else
        echo "No image found with git SHA tag. Proceeding with build."
        echo "false" > /workspace/status/skip_build.txt
      fi

  # 조건부로 이미지 빌드 및 푸시 스텝
  - name: 'moby/buildkit:latest'
    id: 'conditional-buildkit-build'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      if grep -q "false" /workspace/status/skip_build.txt; then
        # BuildKit을 사용하여 빌드 수행
        # 다음은 BuildKit을 사용하는 기본 예시이므로 실제 필요한 인수로 수정해야 합니다.
        buildctl build --frontend dockerfile.v0 --local context=. --local dockerfile=. --output type=image,name=us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$SHORT_SHA,push=true
      else
        echo "Image already exists. Skipping build."
      fi
    waitFor: ['check-git-sha-tag']

  # 이미지에 시멘틱 태그 추가 스텝
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'add-semantic-tag'
    args:
    - container
    - images
    - add-tag
    - us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$SHORT_SHA
    - us-west1-docker.pkg.dev/swit-ops/test-231019/test-img:$TAG_NAME
    - -q

options:
  machineType: 'N1_HIGHCPU_8'
